rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {

    // Game documents
    match /games/{gameId} {
      allow read: if request.auth != null;

      allow create: if request.auth.uid == request.resource.data.player1.uid;

      allow update: if request.auth != null && (
        // Join game
        (resource.data.player2 == null && request.resource.data.player2.uid == request.auth.uid) ||
        // Moves in active game
        (resource.data.status == 'active' &&
          (resource.data.player1.uid == request.auth.uid || resource.data.player2.uid == request.auth.uid)) ||
        // Rematch after finished
        (resource.data.status == 'finished' &&
          (resource.data.player1.uid == request.auth.uid || resource.data.player2.uid == request.auth.uid))
      );

      // Game events subcollection
      match /game_events/{eventId} {
        allow create: if request.auth != null &&
          (get(/databases/$(database)/documents/games/$(gameId)).data.player1.uid == request.auth.uid ||
           get(/databases/$(database)/documents/games/$(gameId)).data.player2.uid == request.auth.uid);
      }
    }

    // Matchmaking requests
    match /matchmaking_requests/{reqId} {
      allow read: if request.auth != null;
      allow create: if request.auth != null && request.resource.data.uid == request.auth.uid;
      allow delete: if request.auth != null && resource.data.uid == request.auth.uid;
    }
  }
}
